diff --git a/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.controller.ts b/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.controller.ts
index 8d1b7b4..dfb5f0f 100644
--- a/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.controller.ts
+++ b/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.controller.ts
@@ -1,4 +1,23 @@
-<% if (crud && type === 'rest') { %>import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';<%
+<% if (crud && type === 'rest') { %>import {
+  ApiCreate,
+  ApiDelete,
+  ApiGetAll,
+  ApiGetOne,
+  ApiUpdate,
+  PaginationDto,
+} from '@common';
+import {
+  Body,
+  Controller,
+  Delete,
+  Get,
+  Param,
+  Patch,
+  Post,
+  Query,
+} from '@nestjs/common';
+import { ApiTags } from '@nestjs/swagger';
+import { <%= classify(name) %>Entity } from './entities/<%= name %>.entity';<%
 } else if (crud && type === 'microservice') { %>import { Controller } from '@nestjs/common';
 import { MessagePattern, Payload } from '@nestjs/microservices';<%
 } else { %>import { Controller } from '@nestjs/common';<%
@@ -7,33 +26,39 @@ import { <%= classify(name) %>Service } from './<%= name %>.service';<% if (crud
 import { Create<%= singular(classify(name)) %>Dto } from './dto/create-<%= singular(name) %>.dto';
 import { Update<%= singular(classify(name)) %>Dto } from './dto/update-<%= singular(name) %>.dto';<% } %>
 
-<% if (type === 'rest') { %>@Controller('<%= dasherize(name) %>')<% } else { %>@Controller()<% } %>
+<% if (type === 'rest') { %>@Controller('<%= dasherize(name) %>')
+@ApiTags('<%= classify(name) %> API')<% } else { %>@Controller()<% } %>
 export class <%= classify(name) %>Controller {
   constructor(private readonly <%= lowercased(name) %>Service: <%= classify(name) %>Service) {}<% if (type === 'rest' && crud) { %>
 
   @Post()
+  @ApiCreate(<%= classify(name) %>Entity, '<%= name %>')
   create(@Body() create<%= singular(classify(name)) %>Dto: Create<%= singular(classify(name)) %>Dto) {
     return this.<%= lowercased(name) %>Service.create(create<%= singular(classify(name)) %>Dto);
   }
 
   @Get()
-  findAll() {
-    return this.<%= lowercased(name) %>Service.findAll();
+  @ApiGetAll(<%= classify(name) %>Entity, '<%= name %>')
+  getAll(@Query() query: PaginationDto) {
+    return this.<%= lowercased(name) %>Service.getAllWithPagination(query);
   }
 
   @Get(':id')
-  findOne(@Param('id') id: string) {
-    return this.<%= lowercased(name) %>Service.findOne(+id);
+  @ApiGetOne(<%= classify(name) %>Entity, '<%= name %>')
+  getOne(@Param('id') id: string) {
+    return this.<%= lowercased(name) %>Service.getOneById(id);
   }
 
   @Patch(':id')
+  @ApiUpdate(<%= classify(name) %>Entity, '<%= name %>')
   update(@Param('id') id: string, @Body() update<%= singular(classify(name)) %>Dto: Update<%= singular(classify(name)) %>Dto) {
-    return this.<%= lowercased(name) %>Service.update(+id, update<%= singular(classify(name)) %>Dto);
+    return this.<%= lowercased(name) %>Service.updateById(id, update<%= singular(classify(name)) %>Dto);
   }
 
   @Delete(':id')
+  @ApiDelete(<%= classify(name) %>Entity, '<%= name %>')
   remove(@Param('id') id: string) {
-    return this.<%= lowercased(name) %>Service.remove(+id);
+    return this.<%= lowercased(name) %>Service.softRemoveById(id);
   }<% } else if (type === 'microservice' && crud) { %>
 
   @MessagePattern('create<%= singular(classify(name)) %>')
diff --git a/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.module.ts b/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.module.ts
index 78a5afc..978af20 100644
--- a/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.module.ts
+++ b/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.module.ts
@@ -1,9 +1,15 @@
 import { Module } from '@nestjs/common';
 import { <%= classify(name) %>Service } from './<%= name %>.service';
+import { <%= classify(name) %>Repository } from './<%= name %>.repository';
 <% if (type === 'rest' || type === 'microservice') { %>import { <%= classify(name) %>Controller } from './<%= name %>.controller';<% } %><% if (type === 'graphql-code-first' || type === 'graphql-schema-first') { %>import { <%= classify(name) %>Resolver } from './<%= name %>.resolver';<% } %><% if (type === 'ws') { %>import { <%= classify(name) %>Gateway } from './<%= name %>.gateway';<% } %>
+<% if (crud) { %>import { TypeOrmModule } from '@nestjs/typeorm';
+import { <%= classify(name) %>Entity } from './entities/<%= name %>.entity';<% } %>
+import { TestModule } from './apis/test/test.module';
 
 @Module({
+  <% if (crud) { %>imports: [TypeOrmModule.forFeature([<%= classify(name) %>Entity])],<% } %>
   <% if (type === 'rest' || type === 'microservice') { %>controllers: [<%= classify(name) %>Controller],
-  providers: [<%= classify(name) %>Service],<% } else if (type === 'graphql-code-first' || type === 'graphql-schema-first') { %>providers: [<%= classify(name) %>Resolver, <%= classify(name) %>Service],<% } else { %>providers: [<%= classify(name) %>Gateway, <%= classify(name) %>Service],<% } %>
+  providers: [<%= classify(name) %>Service, <%= classify(name) %>Repository],<% } else if (type === 'graphql-code-first' || type === 'graphql-schema-first') { %>providers: [<%= classify(name) %>Resolver, <%= classify(name) %>Service],<% } else { %>providers: [<%= classify(name) %>Gateway, <%= classify(name) %>Service],<% } %>
+  <% if (type === 'rest') {%>exports: [<%= classify(name) %>Service]<%}%>
 })
 export class <%= classify(name) %>Module {}
diff --git a/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.repository.ts b/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.repository.ts
new file mode 100644
index 0000000..fef4d76
--- /dev/null
+++ b/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.repository.ts
@@ -0,0 +1,11 @@
+import { <%= classify(name) %>Entity } from './entities/<%= name %>.entity';
+import { InjectRepository } from '@nestjs/typeorm';
+import { Repository } from 'typeorm';
+
+export class <%= classify(name) %>Repository extends Repository<<%= classify(name) %>Entity> {
+	constructor(
+		@InjectRepository(<%= classify(name) %>Entity) private readonly <%= name %>Repo: Repository<<%= classify(name) %>Entity>
+	) {
+		super(<%= name %>Repo.target, <%= name %>Repo.manager, <%= name %>Repo.queryRunner);
+	}
+}
diff --git a/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.service.ts b/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.service.ts
index 21943aa..9544867 100644
--- a/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.service.ts
+++ b/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.service.ts
@@ -1,28 +1,13 @@
-import { Injectable } from '@nestjs/common';<% if (crud && type !== 'graphql-code-first' && type !== 'graphql-schema-first') { %>
-import { Create<%= singular(classify(name)) %>Dto } from './dto/create-<%= singular(name) %>.dto';
-import { Update<%= singular(classify(name)) %>Dto } from './dto/update-<%= singular(name) %>.dto';<% } else if (crud) { %>
-import { Create<%= singular(classify(name)) %>Input } from './dto/create-<%= singular(name) %>.input';
-import { Update<%= singular(classify(name)) %>Input } from './dto/update-<%= singular(name) %>.input';<% } %>
+import { Injectable } from '@nestjs/common';
+<% if (crud) { %>import { BaseService } from '@common';
+import { InjectRepository } from '@nestjs/typeorm';
+import { Repository } from 'typeorm';
+import { <%= classify(name) %>Repository } from './<%= name %>.repository';
+import { <%= classify(name) %>Entity } from './entities/<%= name %>.entity';<% } %>
 
 @Injectable()
-export class <%= classify(name) %>Service {<% if (crud) { %>
-  create(<% if (type !== 'graphql-code-first' && type !== 'graphql-schema-first') { %>create<%= singular(classify(name)) %>Dto: Create<%= singular(classify(name)) %>Dto<% } else { %>create<%= singular(classify(name)) %>Input: Create<%= singular(classify(name)) %>Input<% } %>) {
-    return 'This action adds a new <%= lowercased(singular(classify(name))) %>';
-  }
-
-  findAll() {
-    return `This action returns all <%= lowercased(classify(name)) %>`;
-  }
-
-  findOne(id: number) {
-    return `This action returns a #${id} <%= lowercased(singular(classify(name))) %>`;
-  }
-
-  update(id: number, <% if (type !== 'graphql-code-first' && type !== 'graphql-schema-first') { %>update<%= singular(classify(name)) %>Dto: Update<%= singular(classify(name)) %>Dto<% } else { %>update<%= singular(classify(name)) %>Input: Update<%= singular(classify(name)) %>Input<% } %>) {
-    return `This action updates a #${id} <%= lowercased(singular(classify(name))) %>`;
-  }
-
-  remove(id: number) {
-    return `This action removes a #${id} <%= lowercased(singular(classify(name))) %>`;
-  }
-<% } %>}
+export class <%= classify(name) %>Service <% if (crud) { %>extends BaseService<<%= classify(name) %>Entity> <% } %>{<% if (crud) { %>
+  constructor(private readonly <%= name %>Repo: <%= classify(name) %>Repository) {
+    super(<%= lowercased(name) %>Repo);
+  }<%} %>
+}
diff --git a/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/entities/__name@singular@ent__.ts b/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/entities/__name@singular@ent__.ts
index 362e741..ccaa162 100644
--- a/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/entities/__name@singular@ent__.ts
+++ b/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/entities/__name@singular@ent__.ts
@@ -4,4 +4,8 @@
 export class <%= singular(classify(name)) %> {
   @Field(() => Int, { description: 'Example field (placeholder)' })
   exampleField: number;
-}<% } else { %>export class <%= singular(classify(name)) %> {}<% } %>
+}<% } else { %>import { Entity } from 'typeorm';
+import { BaseEntityWithMerchant } from '@common';
+
+@Entity({ name: '<%= singular(name) %>', schema: 'minigame' })
+export class <%= singular(classify(name)) %>Entity extends BaseEntityWithMerchant {}<% } %>
diff --git a/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.controller.__specFileSuffix__.ts b/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/test/__name__.controller.__specFileSuffix__.ts
similarity index 75%
rename from node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.controller.__specFileSuffix__.ts
rename to node_modules/@nestjs/schematics/dist/lib/resource/files/ts/test/__name__.controller.__specFileSuffix__.ts
index 17e5843..d417320 100644
--- a/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.controller.__specFileSuffix__.ts
+++ b/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/test/__name__.controller.__specFileSuffix__.ts
@@ -1,6 +1,8 @@
 import { Test, TestingModule } from '@nestjs/testing';
-import { <%= classify(name) %>Controller } from './<%= name %>.controller';
-import { <%= classify(name) %>Service } from './<%= name %>.service';
+import { <%= classify(name) %>Controller } from '../<%= name %>.controller';
+import { <%= classify(name) %>Service } from '../<%= name %>.service';
+
+jest.mock('../<%= name %>.service');
 
 describe('<%= classify(name) %>Controller', () => {
   let controller: <%= classify(name) %>Controller;
diff --git a/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.gateway.__specFileSuffix__.ts b/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/test/__name__.gateway.__specFileSuffix__.ts
similarity index 78%
rename from node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.gateway.__specFileSuffix__.ts
rename to node_modules/@nestjs/schematics/dist/lib/resource/files/ts/test/__name__.gateway.__specFileSuffix__.ts
index 8f8b5be..80ee30c 100644
--- a/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.gateway.__specFileSuffix__.ts
+++ b/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/test/__name__.gateway.__specFileSuffix__.ts
@@ -1,6 +1,6 @@
 import { Test, TestingModule } from '@nestjs/testing';
-import { <%= classify(name) %>Gateway } from './<%= name %>.gateway';
-import { <%= classify(name) %>Service } from './<%= name %>.service';
+import { <%= classify(name) %>Gateway } from '../<%= name %>.gateway';
+import { <%= classify(name) %>Service } from '../<%= name %>.service';
 
 describe('<%= classify(name) %>Gateway', () => {
   let gateway: <%= classify(name) %>Gateway;
diff --git a/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.resolver.__specFileSuffix__.ts b/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/test/__name__.resolver.__specFileSuffix__.ts
similarity index 74%
rename from node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.resolver.__specFileSuffix__.ts
rename to node_modules/@nestjs/schematics/dist/lib/resource/files/ts/test/__name__.resolver.__specFileSuffix__.ts
index 2ef2c6f..38800fb 100644
--- a/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.resolver.__specFileSuffix__.ts
+++ b/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/test/__name__.resolver.__specFileSuffix__.ts
@@ -1,6 +1,8 @@
 import { Test, TestingModule } from '@nestjs/testing';
-import { <%= classify(name) %>Resolver } from './<%= name %>.resolver';
-import { <%= classify(name) %>Service } from './<%= name %>.service';
+import { <%= classify(name) %>Resolver } from '../<%= name %>.resolver';
+import { <%= classify(name) %>Service } from '../<%= name %>.service';
+
+jest.mock('../<%= name %>.service');
 
 describe('<%= classify(name) %>Resolver', () => {
   let resolver: <%= classify(name) %>Resolver;
diff --git a/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.service.__specFileSuffix__.ts b/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/test/__name__.service.__specFileSuffix__.ts
similarity index 69%
rename from node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.service.__specFileSuffix__.ts
rename to node_modules/@nestjs/schematics/dist/lib/resource/files/ts/test/__name__.service.__specFileSuffix__.ts
index 2b3f38b..6c80b46 100644
--- a/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/__name__.service.__specFileSuffix__.ts
+++ b/node_modules/@nestjs/schematics/dist/lib/resource/files/ts/test/__name__.service.__specFileSuffix__.ts
@@ -1,12 +1,14 @@
 import { Test, TestingModule } from '@nestjs/testing';
-import { <%= classify(name) %>Service } from './<%= name %>.service';
+import { <%= classify(name) %>Service } from '../<%= name %>.service';
+
+jest.mock('../<%= name %>.repository');
 
 describe('<%= classify(name) %>Service', () => {
   let service: <%= classify(name) %>Service;
 
   beforeEach(async () => {
     const module: TestingModule = await Test.createTestingModule({
-      providers: [<%= classify(name) %>Service],
+      providers: [<%= classify(name) %>Service, <%= classify(name) %>Repository],
     }).compile();
 
     service = module.get<<%= classify(name) %>Service>(<%= classify(name) %>Service);
